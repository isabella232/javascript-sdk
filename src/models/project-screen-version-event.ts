/* tslint:disable */
/* eslint-disable */
/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import {
    ProjectScreenVersionCreatedEvent,
    transformProjectScreenVersionCreatedEventToJSON,
    transformJSONToProjectScreenVersionCreatedEvent
} from './project-screen-version-created-event';
import {
    ProjectScreenVersionCreatedEventResource,
    transformProjectScreenVersionCreatedEventResourceToJSON,
    transformJSONToProjectScreenVersionCreatedEventResource
} from './project-screen-version-created-event-resource';
import {
    ProjectScreenVersionDeletedEvent,
    transformProjectScreenVersionDeletedEventToJSON,
    transformJSONToProjectScreenVersionDeletedEvent
} from './project-screen-version-deleted-event';
import {
    ProjectScreenVersionEventContext,
    transformProjectScreenVersionEventContextToJSON,
    transformJSONToProjectScreenVersionEventContext
} from './project-screen-version-event-context';
import {
    ProjectScreenVersionUpdatedEvent,
    transformProjectScreenVersionUpdatedEventToJSON,
    transformJSONToProjectScreenVersionUpdatedEvent
} from './project-screen-version-updated-event';
import {
    WebhookEventActor,
    transformWebhookEventActorToJSON,
    transformJSONToWebhookEventActor
} from './webhook-event-actor';


export const transformJSONToProjectScreenVersionEvent = function (value: any): ProjectScreenVersionEvent {
    switch (value.action) {
        case 'created':
            return transformJSONToProjectScreenVersionCreatedEvent(value);
        case 'deleted':
            return transformJSONToProjectScreenVersionDeletedEvent(value);
        case 'updated':
            return transformJSONToProjectScreenVersionUpdatedEvent(value);
        default:
            throw new Error(`No variant of ProjectScreenVersionEvent exists with 'action=${ value.action }'`);
    }
}

export const transformProjectScreenVersionEventToJSON = function (value: ProjectScreenVersionEvent): any {
    switch (value.action) {
        case 'created':
            return transformProjectScreenVersionCreatedEventToJSON(value);
        case 'deleted':
            return transformProjectScreenVersionDeletedEventToJSON(value);
        case 'updated':
            return transformProjectScreenVersionUpdatedEventToJSON(value);
    }
}

/**
 * @type ProjectScreenVersionEvent
 * This event is used to notify webhooks about changes related to a screen versions in Zeplin projects.
 * @export
 */
export type ProjectScreenVersionEvent = ProjectScreenVersionCreatedEvent | ProjectScreenVersionDeletedEvent | ProjectScreenVersionUpdatedEvent;


