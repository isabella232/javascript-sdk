/* tslint:disable */
/* eslint-disable */
/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import {
    ProjectTextStyleCreatedEventResource,
    transformProjectTextStyleCreatedEventResourceToJSON,
    transformJSONToProjectTextStyleCreatedEventResource
} from './project-text-style-created-event-resource';
import {
    StyleguideTextStyleCreatedEvent,
    transformStyleguideTextStyleCreatedEventToJSON,
    transformJSONToStyleguideTextStyleCreatedEvent
} from './styleguide-text-style-created-event';
import {
    StyleguideTextStyleDeletedEvent,
    transformStyleguideTextStyleDeletedEventToJSON,
    transformJSONToStyleguideTextStyleDeletedEvent
} from './styleguide-text-style-deleted-event';
import {
    StyleguideTextStyleEventContext,
    transformStyleguideTextStyleEventContextToJSON,
    transformJSONToStyleguideTextStyleEventContext
} from './styleguide-text-style-event-context';
import {
    StyleguideTextStyleUpdatedEvent,
    transformStyleguideTextStyleUpdatedEventToJSON,
    transformJSONToStyleguideTextStyleUpdatedEvent
} from './styleguide-text-style-updated-event';
import {
    WebhookEventActor,
    transformWebhookEventActorToJSON,
    transformJSONToWebhookEventActor
} from './webhook-event-actor';


export const transformJSONToStyleguideTextStyleEvent = function (value: any): StyleguideTextStyleEvent {
    switch (value.action) {
        case 'created':
            return transformJSONToStyleguideTextStyleCreatedEvent(value);
        case 'deleted':
            return transformJSONToStyleguideTextStyleDeletedEvent(value);
        case 'updated':
            return transformJSONToStyleguideTextStyleUpdatedEvent(value);
        default:
            throw new Error(`No variant of StyleguideTextStyleEvent exists with 'action=${ value.action }'`);
    }
}

export const transformStyleguideTextStyleEventToJSON = function (value: StyleguideTextStyleEvent): any {
    switch (value.action) {
        case 'created':
            return transformStyleguideTextStyleCreatedEventToJSON(value);
        case 'deleted':
            return transformStyleguideTextStyleDeletedEventToJSON(value);
        case 'updated':
            return transformStyleguideTextStyleUpdatedEventToJSON(value);
    }
}

/**
 * @type StyleguideTextStyleEvent
 * This event is used to notify webhooks about changes related to a text styles in Zeplin styleguides.
 * @export
 */
export type StyleguideTextStyleEvent = StyleguideTextStyleCreatedEvent | StyleguideTextStyleDeletedEvent | StyleguideTextStyleUpdatedEvent;


