/* tslint:disable */
/* eslint-disable */
/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import {
    ProjectComponentCreatedEventResource,
    transformProjectComponentCreatedEventResourceToJSON,
    transformJSONToProjectComponentCreatedEventResource
} from './project-component-created-event-resource';
import {
    StyleguideComponentCreatedEvent,
    transformStyleguideComponentCreatedEventToJSON,
    transformJSONToStyleguideComponentCreatedEvent
} from './styleguide-component-created-event';
import {
    StyleguideComponentDeletedEvent,
    transformStyleguideComponentDeletedEventToJSON,
    transformJSONToStyleguideComponentDeletedEvent
} from './styleguide-component-deleted-event';
import {
    StyleguideComponentEventContext,
    transformStyleguideComponentEventContextToJSON,
    transformJSONToStyleguideComponentEventContext
} from './styleguide-component-event-context';
import {
    StyleguideComponentUpdatedEvent,
    transformStyleguideComponentUpdatedEventToJSON,
    transformJSONToStyleguideComponentUpdatedEvent
} from './styleguide-component-updated-event';
import {
    StyleguideComponentVersionCreatedEvent,
    transformStyleguideComponentVersionCreatedEventToJSON,
    transformJSONToStyleguideComponentVersionCreatedEvent
} from './styleguide-component-version-created-event';
import {
    WebhookEventActor,
    transformWebhookEventActorToJSON,
    transformJSONToWebhookEventActor
} from './webhook-event-actor';


export const transformJSONToStyleguideComponentEvent = function (value: any): StyleguideComponentEvent {
    switch (value.action) {
        case 'created':
            return transformJSONToStyleguideComponentCreatedEvent(value);
        case 'deleted':
            return transformJSONToStyleguideComponentDeletedEvent(value);
        case 'updated':
            return transformJSONToStyleguideComponentUpdatedEvent(value);
        case 'version_created':
            return transformJSONToStyleguideComponentVersionCreatedEvent(value);
        default:
            throw new Error(`No variant of StyleguideComponentEvent exists with 'action=${ value.action }'`);
    }
}

export const transformStyleguideComponentEventToJSON = function (value: StyleguideComponentEvent): any {
    switch (value.action) {
        case 'created':
            return transformStyleguideComponentCreatedEventToJSON(value);
        case 'deleted':
            return transformStyleguideComponentDeletedEventToJSON(value);
        case 'updated':
            return transformStyleguideComponentUpdatedEventToJSON(value);
        case 'version_created':
            return transformStyleguideComponentVersionCreatedEventToJSON(value);
    }
}

/**
 * @type StyleguideComponentEvent
 * This event is used to notify webhooks about changes related to a components in Zeplin styleguides.
 * @export
 */
export type StyleguideComponentEvent = StyleguideComponentCreatedEvent | StyleguideComponentDeletedEvent | StyleguideComponentUpdatedEvent | StyleguideComponentVersionCreatedEvent;


