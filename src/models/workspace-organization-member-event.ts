/* tslint:disable */
/* eslint-disable */
/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import {
    WebhookEventActor,
    transformWebhookEventActorToJSON,
    transformJSONToWebhookEventActor
} from './webhook-event-actor';
import {
    WorkspaceOrganizationMemberEventContext,
    transformWorkspaceOrganizationMemberEventContextToJSON,
    transformJSONToWorkspaceOrganizationMemberEventContext
} from './workspace-organization-member-event-context';
import {
    WorkspaceOrganizationMemberInvitedEvent,
    transformWorkspaceOrganizationMemberInvitedEventToJSON,
    transformJSONToWorkspaceOrganizationMemberInvitedEvent
} from './workspace-organization-member-invited-event';
import {
    WorkspaceOrganizationMemberInvitedEventResource,
    transformWorkspaceOrganizationMemberInvitedEventResourceToJSON,
    transformJSONToWorkspaceOrganizationMemberInvitedEventResource
} from './workspace-organization-member-invited-event-resource';
import {
    WorkspaceOrganizationMemberRemovedEvent,
    transformWorkspaceOrganizationMemberRemovedEventToJSON,
    transformJSONToWorkspaceOrganizationMemberRemovedEvent
} from './workspace-organization-member-removed-event';
import {
    WorkspaceOrganizationMemberRoleUpdatedEvent,
    transformWorkspaceOrganizationMemberRoleUpdatedEventToJSON,
    transformJSONToWorkspaceOrganizationMemberRoleUpdatedEvent
} from './workspace-organization-member-role-updated-event';
import {
    WorkspaceOrganizationMemberTagUpdatedEvent,
    transformWorkspaceOrganizationMemberTagUpdatedEventToJSON,
    transformJSONToWorkspaceOrganizationMemberTagUpdatedEvent
} from './workspace-organization-member-tag-updated-event';


export const transformJSONToWorkspaceOrganizationMemberEvent = function (value: any): WorkspaceOrganizationMemberEvent {
    switch (value.action) {
        case 'invited':
            return transformJSONToWorkspaceOrganizationMemberInvitedEvent(value);
        case 'removed':
            return transformJSONToWorkspaceOrganizationMemberRemovedEvent(value);
        case 'role_updated':
            return transformJSONToWorkspaceOrganizationMemberRoleUpdatedEvent(value);
        case 'tag_updated':
            return transformJSONToWorkspaceOrganizationMemberTagUpdatedEvent(value);
        default:
            throw new Error(`No variant of WorkspaceOrganizationMemberEvent exists with 'action=${ value.action }'`);
    }
}

export const transformWorkspaceOrganizationMemberEventToJSON = function (value: WorkspaceOrganizationMemberEvent): any {
    switch (value.action) {
        case 'invited':
            return transformWorkspaceOrganizationMemberInvitedEventToJSON(value);
        case 'removed':
            return transformWorkspaceOrganizationMemberRemovedEventToJSON(value);
        case 'role_updated':
            return transformWorkspaceOrganizationMemberRoleUpdatedEventToJSON(value);
        case 'tag_updated':
            return transformWorkspaceOrganizationMemberTagUpdatedEventToJSON(value);
    }
}

/**
 * @type WorkspaceOrganizationMemberEvent
 * This event is used to notify webhooks about any of these activies related to the organization\'s members:    - New member added    - Member removed    - Member\'s role changed    - Member\'s tag changed 
 * @export
 */
export type WorkspaceOrganizationMemberEvent = WorkspaceOrganizationMemberInvitedEvent | WorkspaceOrganizationMemberRemovedEvent | WorkspaceOrganizationMemberRoleUpdatedEvent | WorkspaceOrganizationMemberTagUpdatedEvent;


