/* tslint:disable */
/* eslint-disable */
/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import {
    DesignTokenFont,
    transformDesignTokenFontToJSON,
    transformJSONToDesignTokenFont
} from './design-token-font';


export const transformTextStyleDesignTokenValueToJSON = function (value: TextStyleDesignTokenValue): any {
    return {
        letter_spacing: value.letterSpacing,
        line_height: value.lineHeight,
        alignment: value.alignment,
        font: transformDesignTokenFontToJSON(value.font),
        color: value.color
    }
}

export const transformJSONToTextStyleDesignTokenValue = function (value: any): TextStyleDesignTokenValue {
    return {
        letterSpacing: value.letter_spacing,
        lineHeight: value.line_height,
        alignment: value.alignment,
        font: transformJSONToDesignTokenFont(value.font),
        color: value.color
    }
}

/**
 * Value of the token
 * @export
 * @interface TextStyleDesignTokenValue
 */
export interface TextStyleDesignTokenValue {
    /**
     * Spacing between letters
     * @type {number}
     * @memberof TextStyleDesignTokenValue
     */
    letterSpacing?: number;
    /**
     * Minimum height of a line for the text style
     * @type {number}
     * @memberof TextStyleDesignTokenValue
     */
    lineHeight?: number;
    /**
     * Horizontal alignment of the text style, `left`, `right`, `center`, or `justify`
     * @type {string}
     * @memberof TextStyleDesignTokenValue
     */
    alignment?: string;
    /**
     * 
     * @type {DesignTokenFont}
     * @memberof TextStyleDesignTokenValue
     */
    font: DesignTokenFont;
    /**
     * The value of color in `rgb(r, g, b)` or `rgba(r, g, b, a)` format for the text style.  ☝️*If there\'s a matching color token for the text style\'s color, the color token\'s value is returned as a reference, e.g. `{$colors.light-yellow.value}`.* 
     * @type {string}
     * @memberof TextStyleDesignTokenValue
     */
    color?: string;
}


