/* tslint:disable */
/* eslint-disable */
/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import {
    ProjectTextStyleCreatedEventResource,
    transformProjectTextStyleCreatedEventResourceToJSON,
    transformJSONToProjectTextStyleCreatedEventResource
} from './project-text-style-created-event-resource';
import {
    ProjectTextStyleEventContext,
    transformProjectTextStyleEventContextToJSON,
    transformJSONToProjectTextStyleEventContext
} from './project-text-style-event-context';
import {
    WebhookEventActor,
    transformWebhookEventActorToJSON,
    transformJSONToWebhookEventActor
} from './webhook-event-actor';


export const transformProjectTextStyleCreatedEventToJSON = function (value: ProjectTextStyleCreatedEvent): any {
    return {
        event: value.event,
        action: value.action,
        timestamp: value.timestamp,
        resource: transformProjectTextStyleCreatedEventResourceToJSON(value.resource),
        context: transformProjectTextStyleEventContextToJSON(value.context),
        actor: transformWebhookEventActorToJSON(value.actor)
    }
}

export const transformJSONToProjectTextStyleCreatedEvent = function (value: any): ProjectTextStyleCreatedEvent {
    return {
        event: value.event,
        action: value.action,
        timestamp: value.timestamp,
        resource: transformJSONToProjectTextStyleCreatedEventResource(value.resource),
        context: transformJSONToProjectTextStyleEventContext(value.context),
        actor: transformJSONToWebhookEventActor(value.actor)
    }
}

/**
 * 
 * @export
 * @interface ProjectTextStyleCreatedEvent
 */
export interface ProjectTextStyleCreatedEvent {
    /**
     * 
     * @type {string}
     * @memberof ProjectTextStyleCreatedEvent
     */
    event: 'project.text_style';
    /**
     * 
     * @type {string}
     * @memberof ProjectTextStyleCreatedEvent
     */
    action: 'created';
    /**
     * 
     * @type {number}
     * @memberof ProjectTextStyleCreatedEvent
     */
    timestamp: number;
    /**
     * 
     * @type {ProjectTextStyleCreatedEventResource}
     * @memberof ProjectTextStyleCreatedEvent
     */
    resource: ProjectTextStyleCreatedEventResource;
    /**
     * 
     * @type {ProjectTextStyleEventContext}
     * @memberof ProjectTextStyleCreatedEvent
     */
    context: ProjectTextStyleEventContext;
    /**
     * 
     * @type {WebhookEventActor}
     * @memberof ProjectTextStyleCreatedEvent
     */
    actor: WebhookEventActor;
}


