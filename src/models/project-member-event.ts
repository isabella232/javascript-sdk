/* tslint:disable */
/* eslint-disable */
/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import {
    ProjectMemberEventContext,
    transformProjectMemberEventContextToJSON,
    transformJSONToProjectMemberEventContext
} from './project-member-event-context';
import {
    ProjectMemberInvitedEvent,
    transformProjectMemberInvitedEventToJSON,
    transformJSONToProjectMemberInvitedEvent
} from './project-member-invited-event';
import {
    ProjectMemberInvitedEventResource,
    transformProjectMemberInvitedEventResourceToJSON,
    transformJSONToProjectMemberInvitedEventResource
} from './project-member-invited-event-resource';
import {
    ProjectMemberRemovedEvent,
    transformProjectMemberRemovedEventToJSON,
    transformJSONToProjectMemberRemovedEvent
} from './project-member-removed-event';
import {
    ProjectMemberRoleUpdatedEvent,
    transformProjectMemberRoleUpdatedEventToJSON,
    transformJSONToProjectMemberRoleUpdatedEvent
} from './project-member-role-updated-event';
import {
    WebhookEventActor,
    transformWebhookEventActorToJSON,
    transformJSONToWebhookEventActor
} from './webhook-event-actor';


export const transformJSONToProjectMemberEvent = function (value: any): ProjectMemberEvent {
    switch (value.action) {
        case 'invited':
            return transformJSONToProjectMemberInvitedEvent(value);
        case 'removed':
            return transformJSONToProjectMemberRemovedEvent(value);
        case 'role_updated':
            return transformJSONToProjectMemberRoleUpdatedEvent(value);
        default:
            throw new Error(`No variant of ProjectMemberEvent exists with 'action=${ value.action }'`);
    }
}

export const transformProjectMemberEventToJSON = function (value: ProjectMemberEvent): any {
    switch (value.action) {
        case 'invited':
            return transformProjectMemberInvitedEventToJSON(value);
        case 'removed':
            return transformProjectMemberRemovedEventToJSON(value);
        case 'role_updated':
            return transformProjectMemberRoleUpdatedEventToJSON(value);
    }
}

/**
 * @type ProjectMemberEvent
 * This event is used to notify webhooks about changes related to the project\'s members:    - New member invited    - Member removed    - Member\'s role changed 
 * @export
 */
export type ProjectMemberEvent = ProjectMemberInvitedEvent | ProjectMemberRemovedEvent | ProjectMemberRoleUpdatedEvent;


