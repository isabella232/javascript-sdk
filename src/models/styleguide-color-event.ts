/* tslint:disable */
/* eslint-disable */
/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import {
    ProjectColorCreatedEventResource,
    transformProjectColorCreatedEventResourceToJSON,
    transformJSONToProjectColorCreatedEventResource
} from './project-color-created-event-resource';
import {
    StyleguideColorCreatedEvent,
    transformStyleguideColorCreatedEventToJSON,
    transformJSONToStyleguideColorCreatedEvent
} from './styleguide-color-created-event';
import {
    StyleguideColorDeletedEvent,
    transformStyleguideColorDeletedEventToJSON,
    transformJSONToStyleguideColorDeletedEvent
} from './styleguide-color-deleted-event';
import {
    StyleguideColorEventContext,
    transformStyleguideColorEventContextToJSON,
    transformJSONToStyleguideColorEventContext
} from './styleguide-color-event-context';
import {
    StyleguideColorUpdatedEvent,
    transformStyleguideColorUpdatedEventToJSON,
    transformJSONToStyleguideColorUpdatedEvent
} from './styleguide-color-updated-event';
import {
    WebhookEventActor,
    transformWebhookEventActorToJSON,
    transformJSONToWebhookEventActor
} from './webhook-event-actor';


export const transformJSONToStyleguideColorEvent = function (value: any): StyleguideColorEvent {
    switch (value.action) {
        case 'created':
            return transformJSONToStyleguideColorCreatedEvent(value);
        case 'deleted':
            return transformJSONToStyleguideColorDeletedEvent(value);
        case 'updated':
            return transformJSONToStyleguideColorUpdatedEvent(value);
        default:
            throw new Error(`No variant of StyleguideColorEvent exists with 'action=${ value.action }'`);
    }
}

export const transformStyleguideColorEventToJSON = function (value: StyleguideColorEvent): any {
    switch (value.action) {
        case 'created':
            return transformStyleguideColorCreatedEventToJSON(value);
        case 'deleted':
            return transformStyleguideColorDeletedEventToJSON(value);
        case 'updated':
            return transformStyleguideColorUpdatedEventToJSON(value);
    }
}

/**
 * @type StyleguideColorEvent
 * This event is used to notify webhooks about changes related to a colors in Zeplin styleguides.
 * @export
 */
export type StyleguideColorEvent = StyleguideColorCreatedEvent | StyleguideColorDeletedEvent | StyleguideColorUpdatedEvent;


