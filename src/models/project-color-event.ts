/* tslint:disable */
/* eslint-disable */
/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import {
    ProjectColorCreatedEvent,
    transformProjectColorCreatedEventToJSON,
    transformJSONToProjectColorCreatedEvent
} from './project-color-created-event';
import {
    ProjectColorCreatedEventResource,
    transformProjectColorCreatedEventResourceToJSON,
    transformJSONToProjectColorCreatedEventResource
} from './project-color-created-event-resource';
import {
    ProjectColorDeletedEvent,
    transformProjectColorDeletedEventToJSON,
    transformJSONToProjectColorDeletedEvent
} from './project-color-deleted-event';
import {
    ProjectColorEventContext,
    transformProjectColorEventContextToJSON,
    transformJSONToProjectColorEventContext
} from './project-color-event-context';
import {
    ProjectColorUpdatedEvent,
    transformProjectColorUpdatedEventToJSON,
    transformJSONToProjectColorUpdatedEvent
} from './project-color-updated-event';
import {
    WebhookEventActor,
    transformWebhookEventActorToJSON,
    transformJSONToWebhookEventActor
} from './webhook-event-actor';


export const transformJSONToProjectColorEvent = function (value: any): ProjectColorEvent {
    switch (value.action) {
        case 'created':
            return transformJSONToProjectColorCreatedEvent(value);
        case 'deleted':
            return transformJSONToProjectColorDeletedEvent(value);
        case 'updated':
            return transformJSONToProjectColorUpdatedEvent(value);
        default:
            throw new Error(`No variant of ProjectColorEvent exists with 'action=${ value.action }'`);
    }
}

export const transformProjectColorEventToJSON = function (value: ProjectColorEvent): any {
    switch (value.action) {
        case 'created':
            return transformProjectColorCreatedEventToJSON(value);
        case 'deleted':
            return transformProjectColorDeletedEventToJSON(value);
        case 'updated':
            return transformProjectColorUpdatedEventToJSON(value);
    }
}

/**
 * @type ProjectColorEvent
 * This event is used to notify webhooks about changes related to a colors in the local styleguide of Zeplin projects.
 * @export
 */
export type ProjectColorEvent = ProjectColorCreatedEvent | ProjectColorDeletedEvent | ProjectColorUpdatedEvent;


