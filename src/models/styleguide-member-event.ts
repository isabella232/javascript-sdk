/* tslint:disable */
/* eslint-disable */
/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import {
    StyleguideMemberEventContext,
    transformStyleguideMemberEventContextToJSON,
    transformJSONToStyleguideMemberEventContext
} from './styleguide-member-event-context';
import {
    StyleguideMemberInvitedEvent,
    transformStyleguideMemberInvitedEventToJSON,
    transformJSONToStyleguideMemberInvitedEvent
} from './styleguide-member-invited-event';
import {
    StyleguideMemberInvitedEventResource,
    transformStyleguideMemberInvitedEventResourceToJSON,
    transformJSONToStyleguideMemberInvitedEventResource
} from './styleguide-member-invited-event-resource';
import {
    StyleguideMemberRemovedEvent,
    transformStyleguideMemberRemovedEventToJSON,
    transformJSONToStyleguideMemberRemovedEvent
} from './styleguide-member-removed-event';
import {
    StyleguideMemberRoleUpdatedEvent,
    transformStyleguideMemberRoleUpdatedEventToJSON,
    transformJSONToStyleguideMemberRoleUpdatedEvent
} from './styleguide-member-role-updated-event';
import {
    WebhookEventActor,
    transformWebhookEventActorToJSON,
    transformJSONToWebhookEventActor
} from './webhook-event-actor';


export const transformJSONToStyleguideMemberEvent = function (value: any): StyleguideMemberEvent {
    switch (value.action) {
        case 'invited':
            return transformJSONToStyleguideMemberInvitedEvent(value);
        case 'removed':
            return transformJSONToStyleguideMemberRemovedEvent(value);
        case 'role_updated':
            return transformJSONToStyleguideMemberRoleUpdatedEvent(value);
        default:
            throw new Error(`No variant of StyleguideMemberEvent exists with 'action=${ value.action }'`);
    }
}

export const transformStyleguideMemberEventToJSON = function (value: StyleguideMemberEvent): any {
    switch (value.action) {
        case 'invited':
            return transformStyleguideMemberInvitedEventToJSON(value);
        case 'removed':
            return transformStyleguideMemberRemovedEventToJSON(value);
        case 'role_updated':
            return transformStyleguideMemberRoleUpdatedEventToJSON(value);
    }
}

/**
 * @type StyleguideMemberEvent
 * This event is used to notify webhooks about changes related to the styleguide\'s members:    - New member invited    - Member removed    - Member\'s role changed 
 * @export
 */
export type StyleguideMemberEvent = StyleguideMemberInvitedEvent | StyleguideMemberRemovedEvent | StyleguideMemberRoleUpdatedEvent;


