/* tslint:disable */
/* eslint-disable */
/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import {
    ColorData,
    transformColorDataToJSON,
    transformJSONToColorData
} from './color-data';


export const transformTextStyleDataToJSON = function (value: TextStyleData): any {
    return {
        postscript_name: value.postscriptName,
        font_family: value.fontFamily,
        font_size: value.fontSize,
        font_weight: value.fontWeight,
        font_style: value.fontStyle,
        font_stretch: value.fontStretch,
        line_height: value.lineHeight,
        letter_spacing: value.letterSpacing,
        text_align: value.textAlign,
        color: value.color && transformColorDataToJSON(value.color)
    }
}

export const transformJSONToTextStyleData = function (value: any): TextStyleData {
    return {
        postscriptName: value.postscript_name,
        fontFamily: value.font_family,
        fontSize: value.font_size,
        fontWeight: value.font_weight,
        fontStyle: value.font_style,
        fontStretch: value.font_stretch,
        lineHeight: value.line_height,
        letterSpacing: value.letter_spacing,
        textAlign: value.text_align,
        color: value.color && transformJSONToColorData(value.color)
    }
}

/**
 * 
 * @export
 * @interface TextStyleData
 */
export interface TextStyleData {
    /**
     * PostScript name of the text style, e.g. Roboto-Regular
     * @type {string}
     * @memberof TextStyleData
     */
    postscriptName: string;
    /**
     * Font family of the text style, e.g. Roboto, Arial
     * @type {string}
     * @memberof TextStyleData
     */
    fontFamily: string;
    /**
     * Font size of the text style
     * @type {number}
     * @memberof TextStyleData
     */
    fontSize: number;
    /**
     * Font weight of the text style, e.g. 500, 700
     * @type {number}
     * @memberof TextStyleData
     */
    fontWeight: number;
    /**
     * Font style of the text style, e.g. italic, oblique
     * @type {string}
     * @memberof TextStyleData
     */
    fontStyle: string;
    /**
     * Font stretch form of the text style, e.g. 0.75, 1.00
     * @type {number}
     * @memberof TextStyleData
     */
    fontStretch: number;
    /**
     * Minimum height of a line for the text style
     * @type {number}
     * @memberof TextStyleData
     */
    lineHeight?: number;
    /**
     * Spacing between letters
     * @type {number}
     * @memberof TextStyleData
     */
    letterSpacing?: number;
    /**
     * Horizontal alignment of the text style, left, right, center, or justify
     * @type {string}
     * @memberof TextStyleData
     */
    textAlign?: string;
    /**
     * 
     * @type {ColorData}
     * @memberof TextStyleData
     */
    color?: ColorData;
}


