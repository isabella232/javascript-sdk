/* tslint:disable */
/* eslint-disable */
/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import {
    OrganizationWebhookEventEnum,
    transformOrganizationWebhookEventEnumToJSON,
    transformJSONToOrganizationWebhookEventEnum
} from './organization-webhook-event-enum';
import {
    WebhookStatusEnum,
    transformWebhookStatusEnumToJSON,
    transformJSONToWebhookStatusEnum
} from './webhook-status-enum';


export const transformOrganizationWebhookUpdateBodyToJSON = function (value: OrganizationWebhookUpdateBody): any {
    return {
        url: value.url,
        name: value.name,
        secret: value.secret,
        status: value.status && transformWebhookStatusEnumToJSON(value.status),
        project_ids: value.projectIds && [...value.projectIds],
        styleguide_ids: value.styleguideIds && [...value.styleguideIds],
        events: value.events && [...value.events].map(transformOrganizationWebhookEventEnumToJSON)
    }
}

export const transformJSONToOrganizationWebhookUpdateBody = function (value: any): OrganizationWebhookUpdateBody {
    return {
        url: value.url,
        name: value.name,
        secret: value.secret,
        status: value.status && transformJSONToWebhookStatusEnum(value.status),
        projectIds: value.project_ids && new Set(value.project_ids),
        styleguideIds: value.styleguide_ids && new Set(value.styleguide_ids),
        events: value.events && new Set(value.events.map(transformJSONToOrganizationWebhookEventEnum))
    }
}

/**
 * 
 * @export
 * @interface OrganizationWebhookUpdateBody
 */
export interface OrganizationWebhookUpdateBody {
    /**
     * The URL of the webhook
     * @type {string}
     * @memberof OrganizationWebhookUpdateBody
     */
    url?: string;
    /**
     * The name of the webhook
     * @type {string}
     * @memberof OrganizationWebhookUpdateBody
     */
    name?: string;
    /**
     * The secret to be used to generate signatures for webhook requests
     * @type {string}
     * @memberof OrganizationWebhookUpdateBody
     */
    secret?: string;
    /**
     * 
     * @type {WebhookStatusEnum}
     * @memberof OrganizationWebhookUpdateBody
     */
    status?: WebhookStatusEnum;
    /**
     * The project ids of the webhook
     * @type {Set<string>}
     * @memberof OrganizationWebhookUpdateBody
     */
    projectIds?: Set<string>;
    /**
     * The styleguide ids of the webhook
     * @type {Set<string>}
     * @memberof OrganizationWebhookUpdateBody
     */
    styleguideIds?: Set<string>;
    /**
     * The events of the webhook
     * @type {Set<OrganizationWebhookEventEnum>}
     * @memberof OrganizationWebhookUpdateBody
     */
    events?: Set<OrganizationWebhookEventEnum>;
}


